.PHONY: all poetry lytex


SRC_DIR := scores
LYTEX_DIR := templates/lytex
OUT_DIR := prints
SOURCES := $(wildcard $(LYTEX_DIR)/*/*.lytex)

.SECONDEXPANSION:

poetry:
	cd templates && poetry install --no-root

lytex: poetry
	echo "All parts"
	cd templates && poetry run python generate.py

all: lytex all_parts

#all_parts: $(SOURCES:$(LYTEX_DIR)/dots/%.lytex=$(OUT_DIR)/dots/%) $(SOURCES:$(LYTEX_DIR)/mandolin/%.lytex=$(OUT_DIR)/mandolin/%)
all_parts:
	echo $*

$(OUT_DIR)/dots/%: $(LYTEX_DIR)/dots/%.lytex
	cd $(LYTEX_DIR) && lilypond-book --output=out --loglevel=ERROR --pdf dots/$*.lytex
	cd $(LYTEX_DIR)/out && xelatex $*
	mkdir -p $(OUT_DIR)/dots
	cp $(LYTEX_DIR)/out/$*.pdf $(OUT_DIR)/dots/$*.pdf

$(OUT_DIR)/mandolin/%: $(LYTEX_DIR)/mandolin/%.lytex
	cd $(LYTEX_DIR) && lilypond-book --output=out --loglevel=ERROR --pdf mandolin/$*.lytex
	cd $(LYTEX_DIR)/out && xelatex $*
	mkdir -p $(OUT_DIR)/mandolin
	cp $(LYTEX_DIR)/out/$*.pdf $(OUT_DIR)/mandolin/$*.pdf

# generate individual lytex files
$(LYTEX_DIR)/dots/%.lytex: poetry $(SRC_DIR)/%.ly
	echo "single part dots"
	cd templates && poetry run python generate.py $*

$(LYTEX_DIR)/mandolin/%.lytex: poetry $(SRC_DIR)/%.ly
	echo "single part mandolin"
	cd templates && poetry run python generate.py $*

clean:
	rm -rf $(OUT_DIR)/*
	rm -rf $(LYTEX_DIR)
